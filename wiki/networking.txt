#verificar tabela arp
ip n

#check interfaces packets
watch -n 1 ip -s link

#Bring up interface x.
ip link set x up
           	
#Bring down interface x.
ip link set x down

#Discovering IP address based on MAC address
nmap -sP <LAN+MASK> >/dev/null && arp -an | grep <MAC_ADDRESS_HERE> | awk '{print $2}' | sed 's/[()]//g'
Ex.: nmap -sP 192.168.16.0/24 >/dev/null && arp -an | grep 08:00:27:64:48:74 | awk '{print $2}' | sed 's/[()]//g'
           

>>>> DHCLIENT

#releasing ethernet address
sudo dhclient -r <NIC_name>
sudo dhclient -v -r <NIC_name> (for wireless)

#assigning IP address
sudo dhclient <NIC_name>
sudo dhclient -v <NIC_name>


>>>> NMCLI 
#displaying all connections
nmcli connection show

#displaying all currently active connections
nmcli connection show --active

#get the network connectivity state
nmcli networking connectivity

#observe network manager activity
nmcli monitor

#check device connectivity status
nmcli device status

#show detailed information about a device (NIC, for example)
nmcli device show
nmcli device show eno1

Check how to enable wifi hotspot
nmcli device wifi hotspot 

#disabling/enabling wifi
nmcli radio wifi off/on


nmcli -s dev wifi hotspot con-name QuickHotspot
           creates a hotspot profile and connects it. Prints the hotspot password the user should use to connect to
           the hotspot from other devices.

nmcli dev wifi con "Cafe Hotspot 1" password caffeine name "My cafe"
           creates a new connection named "My cafe" and then connects it to "Cafe Hotspot 1" SSID using password
           "caffeine". This is mainly useful when connecting to "Cafe Hotspot 1" for the first time. Next time, it
           is better to use nmcli con up id "My cafe" so that the existing connection profile can be used and no
           additional is created.
