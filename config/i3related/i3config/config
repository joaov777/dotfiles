#      ____      __ 
#      | \ \    / /   Joao Victor (joaov777)
#      | |\ \  / /    https://github.com/joaov777
#  _   | | \ \/ /   
# | |__| |  \  /    
#  \____/    \/     
#
#  i3 config file                   

#==========================> BEGINNING OF FILE

## Win Key (principal)
set $mod Mod4

## alt Key (secondary)
set $mod2 Mod1

default_border pixel 1
default_floating_border normal
hide_edge_borders none

# Font for window titles. Will also be used by #the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:Source Code Variable 9

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork


#==========================> PERSONAL APPS
# NetworkManager is the most popular way to manage wireless networks on Linux
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# bluetooth applet
exec --no-startup-id /usr/bin/blueman-applet

# starting the system with english us keyboard layout
exec --no-startup-id exec setxkbmap us intl

# polybar
#exec_always --no-startup-id polybar -r mybar
exec_always --no-startup-id ~/.config/polybar/launch_polybar.sh 

# rofi
#bindsym Ctrl+space exec /usr/bin/rofi -show run

# brave browser
bindsym $mod+b exec /usr/bin/brave

#dmenu
bindsym Ctrl+space exec /usr/bin/dmenu_run -fn " Consolas-8 "

# screenshot tool
bindsym Print exec --no-startup-id /usr/bin/flameshot gui 

# clipboard manager
#bindsym $mod+space exec /usr/bin/copyq && /usr/bin/copyq toggle 
bindsym $mod+space exec /usr/bin/copyq menu
exec --no-startup-id /usr/bin/copyq

exec --no-startup-id xfce4-power-manager
exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id setcursor
exec --no-startup-id nitrogen --restore; sleep 1;
exec --no-startup-id nm-applet

# enable screenlock
#bindsym F10 exec /usr/bin/i3lock --color=#000000
bindsym F10 exec /usr/bin/i3lock-fancy 

# enable compositor
#exec --no-startup-id picom -b
exec --no-startup-id picom --experimental-backends -b

# file manager 
bindsym $mod+e exec /usr/bin/thunar

# audio player mocp
bindsym $mod+m exec /usr/bin/tilix -e /usr/bin/mocp -T /usr/share/moc/themes/black_theme

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec /usr/bin/termite
bindsym $mod+Return exec /usr/bin/tilix
#bindsym $mod+Return exec /usr/bin/alacritty
#==========================| PERSONAL APPS END

#==========================> GENERAL COMMANDS
#switch to left workspace
bindsym mod1+l workspace next

#switch to right workspace
bindsym mod1+h workspace prev

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# kill focused window
bindsym $mod+x kill

# dmenu
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+i split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

#==========================| GENERAL COMMANDS END

#==========================> MULTI-MONITOR
##In case you have two monitors, execute xrandr --listmonitors and replace them on the variables
set $SCREEN_LEFT "HDMI-1"
set $SCREEN_RIGHT "DP-2"
set $home_laptop_monitor "eDP-1"

## Setting workspaces for HOME context
workspace $ws1 output $SCREEN_LEFT
workspace $ws2 output $SCREEN_LEFT
workspace $ws3 output $SCREEN_LEFT
workspace $ws4 output $SCREEN_LEFT
workspace $ws5 output $SCREEN_LEFT
workspace $ws6 output $SCREEN_RIGHT
workspace $ws7 output $SCREEN_RIGHT
workspace $ws8 output $SCREEN_RIGHT
workspace $ws9 output $SCREEN_RIGHT
workspace $ws10 output $SCREEN_RIGHT

## Setting workspaces for HOME LAPTOP context
workspace $ws11 output $laptop_monitor
workspace $ws12 output $laptop_monitor
workspace $ws13 output $laptop_monitor
workspace $ws14 output $laptop_monitor
workspace $ws15 output $laptop_monitor

## Home multi-monitor setup
#exec --no-startup-id xrandr --output HDMI-1 --auto --primary --left-of DP-2 --output DP-2 --auto --output eDP-1 --off
exec --no-startup-id xrandr --output eDP-1 --auto --primary

## IFCE multi-monitor setup

##Example: exec --no-startup-id xrandr --output HDMI-1 --mode '1920x1080' --left-of DP-2
#==========================| MULTI-MONITOR END

#==========================> WORKSPACES
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1" 
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod2+1 workspace number $ws11
bindsym $mod2+2 workspace number $ws12
bindsym $mod2+3 workspace number $ws13
bindsym $mod2+4 workspace number $ws14
bindsym $mod2+5 workspace number $ws15

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod2+Shift+1 move container to workspace number $ws11
bindsym $mod2+Shift+2 move container to workspace number $ws12
bindsym $mod2+Shift+3 move container to workspace number $ws13
bindsym $mod2+Shift+4 move container to workspace number $ws14
bindsym $mod2+Shift+5 move container to workspace number $ws15

#==========================| WORKSPACES END

#==========================> RESIZING
# resize window (you can also use the mouse for that)
#arranging the windows
bindsym $mod+a mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+a
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+a mode "default"
}
#==========================| RESIZING END

#==========================> BARS
#bar01
#bar {
#	id bar01
#        #status_command i3status
#        status_command py3status -c /etc/i3status.conf
#        position bottom
#        #font pango:Source Code Variable 8
#	    font pango: Noto Sans 9
#
#        tray_output none
#        
#        
#        colors {
#       #background #222D31
#        background #0d0d0d
#        statusline #F9FAF9
#        separator  #454947
#
#                     	    border  backgr. text
#        focused_workspace  #333333 #222D31 #EEE8D5
#        active_workspace   #595B5B #353836 #FDF6E3
#        inactive_workspace #595B5B #222D31 #EEE8D5
#        binding_mode       #16a085 #2C2C2C #F9FAF9
#        urgent_workspace   #16a085 #FDF6E3 #E5201D
#    }
#}

#bar02
#bar {
#	id bar02
#        #status_command i3status
#        status_command py3status -c /etc/i3status2.conf
#        tray_output none
#        position top
#        #font pango:Source Code Variable 8
#		#font pango:Freemono Bold 8
#		font pango: Noto Sans 9
#        workspace_buttons no
#        
#        
#        colors {
#        #background #222D31
#        background #0d0d0d
#        statusline #F9FAF9
#        separator  #454947
#
#                           border  backgr. text
#        focused_workspace  #ffffff #222D31 #EEE8D5
#        active_workspace   #595B5B #353836 #FDF6E3
#        inactive_workspace #595B5B #222D31 #EEE8D5
#        binding_mode       #16a085 #2C2C2C #F9FAF9
#        urgent_workspace   #16a085 #FDF6E3 #E5201D
#    }
#}

#==========================| BARS END

#Colors

client.focused          #ededed	#545454	#333333	#333333	
client.focused_inactive #000000	#000000	#000000	#000000
client.unfocused        #000000	#000000	#000000	#000000
client.urgent           #ff00d9	#ff00d9	#ff00d9	#ff00d9

#==========================> GAPS
# Set inner/outer gaps
gaps inner 12
gaps outer 5

#smart_gaps on
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
#==========================| GAPS END

#==========================> VPN MODE
bindsym Shift+v mode "$VPN_MODE"
set $VPN_MODE VPN MODE: (i) ifce, (n) nordvpn
mode "$VPN_MODE" {
     
    #connect to ifce vpn 
    #bindsym i exec sudo openvpn --config <path_to_vpn_file_here>
    #bindsym Shift+i exec sudo pkill openvpn
    
    #connect to nord vpn
    bindsym n exec /usr/bin/nordvpn connect United_States
    bindsym Shift+n exec /usr/bin/nordvpn disconnect

    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym Shift+v mode "default"
}
#==========================| VPN MODE END

#==========================> BRIGHTNESS MODE
bindsym Shift+b mode "$BRIGHTNESS_MODE"

set $BRIGHTNESS_MODE BRIGHTNESS MODE: (j/+/Up) increase, (k/-/Down) decrease
mode "$BRIGHTNESS_MODE" {
     bindsym b	mode "$brightness_mode"
     bindsym Escape mode "default"
     bindsym Return mode "default"
     bindsym Shift+m mode "default"
}

mode "$brightness_mode" {
        #turn up brightness by 20%
        bindsym plus exec /usr/bin/brightnessctl set +20
        bindsym Up exec /usr/bin/brightnessctl set +20
        bindsym k exec /usr/bin/brightnessctl set +20
        
        #turn down brightness by 20%
        bindsym minus exec /usr/bin/brightnessctl set 20-
        bindsym Down exec /usr/bin/brightnessctl set 20-
        bindsym j exec /usr/bin/brightnessctl set 20-

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Shift+b mode "default"
}
#==========================| BRIGHTNESS MODE END

#==========================> AUDIO MODE
#audio general commands
exec --no-startup-id volumeicon
#exec bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'f
exec --no-startup-id pulseaudio -k && pulseaudio --start
exec --no-startup-id pa-applet
bindsym $mod+Ctrl+m exec pavucontrol

bindsym Shift+a mode "$AUDIO_MODE"

set $AUDIO_MODE AUDIO MODE: (k/+/Up) increase, (j/-/Down) decrease, (m) Mute
mode "$AUDIO_MODE" {
    bindsym a	mode "$audio_mode"
    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym Shift+m mode "default"
}

mode "$audio_mode" {
        #turn up volume by 10%
        bindsym plus exec /usr/bin/pulseaudio-ctl up 10%
        bindsym Up exec /usr/bin/pulseaudio-ctl up 10%
        bindsym k exec /usr/bin/pulseaudio-ctl up 10%
        
        #turn down volume by 10%
        bindsym minus exec /usr/bin/pulseaudio-ctl down 10%
        bindsym Down exec /usr/bin/pulseaudio-ctl down 10%
        bindsym j exec /usr/bin/pulseaudio-ctl down 10%
	
	#mute
	bindsym m exec /usr/bin/pulseaudio-ctl mute 
	bindsym XF86AudioMute exec /usr/bin/pulseaudio-ctl mute 

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Shift+a mode "default"
}

#==========================| AUDIO MODE END



#==========================| SYSTEM MODE
bindsym Shift+s mode "$SYSTEM_MODE"

set $SYSTEM_MODE SYSTEM MODE: (r) reboot, (s) shutdown, (l) logout
mode "$SYSTEM_MODE" {
     
    bindsym r	exec /sbin/reboot
    bindsym s	exec /sbin/shutdown -h now
    bindsym l	exec i3-msg exit

    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym Shift+s mode "default"
}
#==========================| SYSTEM MODE END

#==========================> BARS MODE
bindsym Shift+h mode "$BARS_MODE"
set $BARS_MODE BAR MODE: (h) hide bars
mode "$BARS_MODE" {

    bindsym h exec pkill polybar 
    bindsym Shift+h exec ~/.config/polybar/launch_polybar.sh 

    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym Shift+h mode "default"
}
#==========================| BARS MODE END

#==========================> KEYBOARD LAYOUT MODE
bindsym Shift+l mode "$KEYBOARD_MODE"
set $KEYBOARD_MODE KEYBOARD LAYOUT MODE: (u) us , (b) pt
mode "$KEYBOARD_MODE" {

    #set keyabord to brazilian portuguese
    bindsym b exec /usr/bin/setxkbmap -layout br -model abnt2

    #set keyboard layout to us alt intl
    bindsym u exec /usr/bin/setxkbmap us intl

    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym Shift+l mode "default"
}
#==========================| KEYBOARD LAYOUT MODE END

#==========================> CONNECTIONS MODE
bindsym Shift+c mode "$CONNECTIONS_MODE"
set $CONNECTIONS_MODE CONNECTIONS MODE: (n) Network , (b) Bluetooth
mode "$CONNECTIONS_MODE" {

    #run network connections manager
    bindsym n exec /usr/bin/nm-connection-editor

    #run bluetooth connections manager
    bindsym b exec /usr/bin/blueman-manager

    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym Shift+c mode "default"
}
#==========================| CONNECTIONS MODE END

#==========================> TRAY MODE
bindsym Shift+t mode "$TRAY_MODE"
set $TRAY_MODE TRAY MODE: (e) Enable tray , (d) Disable tray
mode "$TRAY_MODE" {

    #run network connections manager
    bindsym e exec /usr/bin/nm-applet && /usr/bin/trayer

    #run bluetooth connections manager
    bindsym d exec killall /usr/bin/trayer

    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym Shift+t mode "default"
}
#==========================| TRAY MODE END

#==========================> PASSWORD MANAGER MODE
bindsym Shift+x mode "$PM_MODE"
set $PM_MODE PASSWORD MANAGER MODE: (e) Enable KDBX , (d) Disable KDBX
mode "$PM_MODE" {

    #Enabling - mounting drive through Rclone
    #bindsym e exec mkdir /tmp/JOAO && /usr/bin/rclone --vfs-cache-mode writes mount JOAO:/Mixed/v1/ /tmp/JOAO
    
    bindsym e exec mkdir /tmp/JOAO && /usr/bin/rclone mount JOAO:/ /tmp/JOAO

    #run bluetooth connections manager
    bindsym d exec fusermount -u /tmp/JOAO && rm -rf /tmp/JOAO

    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym Shift+x mode "default"
}
#==========================| PASSWORD MANAGER MODE END







#==========================| END OF FILE
