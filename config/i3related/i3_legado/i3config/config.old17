#joaov777 i3config file
#==========================> BEGINNING OF FILE
set $mod Mod4

default_border pixel 1
default_floating_border normal
hide_edge_borders none

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:Source Code Variable 9

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

#==========================> AUDIO SECTION
exec --no-startup-id volumeicon
#exec bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'
exec --no-startup-id pulseaudio -k && pulseaudio --start
exec --no-startup-id pa-applet
bindsym $mod+Ctrl+m exec pavucontrol

#volume up by 5% increment
bindsym $mod+u exec --no-startup-id /usr/bin/pulseaudio-ctl up 10% && notify-send -t 1 "Volume Up!" "$(pulseaudio-ctl full-status | cut -c1-3)%"

#volume down by 5% increment
bindsym $mod+d exec --no-startup-id /usr/bin/pulseaudio-ctl down 10% && notify-send -t 1 "Volume Down!" "$(pulseaudio-ctl full-status | cut -c1-3)%"


#complete mute
bindsym $mod+s exec --no-startup-id /usr/bin/pulseaudio-ctl mute && notify-send -t 1 "Mute" "0%"
#==========================| AUDIO SECTION END

#==========================> PERSONAL APPS
# polybar
#exec_always --no-startup-id polybar -r mybar
#exec_always --no-startup-id ~/.config/polybar/launch.sh 

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run

# rofi
bindsym Ctrl+space exec /usr/bin/rofi -show run

# screenshot tool
bindsym Print exec --no-startup-id /usr/bin/flameshot gui 

# clipboard manager
#bindsym $mod+c exec /usr/bin/copyq && /usr/bin/copyq toggle 
bindsym $mod+c exec /usr/bin/copyq && /usr/bin/copyq menu

exec --no-startup-id xfce4-power-manager
exec_always --no-startup-id ff-theme-util
exec_always --no-startup-id setcursor
exec --no-startup-id nitrogen --restore; sleep 1;
exec --no-startup-id nm-applet

# enable screenlock
#bindsym F10 exec /usr/bin/i3lock --color=#000000
bindsym F10 exec /usr/bin/i3lock-fancy 

# enable compositor
exec --no-startup-id picom

# file manager for i3
bindsym $mod+e exec /usr/bin/pcmanfm

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec /usr/bin/termite
#==========================| PERSONAL APPS END

#==========================> GENERAL COMMANDS
#screen brightness
bindsym XF86MonBrightnessDown exec --no-srartup-id xbacklight -5
bindsym XF86MonBrightnessUp exec --no-srartup-id xbacklight +5

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# kill focused window
bindsym $mod+Shift+q kill

# dmenu
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left AVAILABLE
bindsym $mod+Right focus right AVAILABLE

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left AVAILABLE
#bindsym $mod+Shift+Down move down AVAILABLE
#bindsym $mod+Shift+Up move up AVAILABLE
#bindsym $mod+Shift+Right move right AVAILABLE

# split in horizontal orientation
bindsym $mod+i split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+w layout tabbed AVAILABLE
#bindsym $mod+e layout toggle split AVAILABLE

# toggle tiling / floating
#bindsym $mod+Shift+space floating toggle AVAILABLE

# focus the parent container
#bindsym $mod+a focus parent AVAILABLE
#==========================| GENERAL COMMANDS END

#==========================> MULTI-MONITOR
##In case you have two monitors, execute xrandr --listmonitors and replace them on the variables
#set $left_monitor "HDMI-1"
#set $right_monitor "DP-2"
#
#workspace $ws1 output $left_monitor
#workspace $ws2 output $left_monitor
#workspace $ws3 output $left_monitor
#workspace $ws4 output $left_monitor
#workspace $ws5 output $right_monitor
#workspace $ws6 output $right_monitor
#workspace $ws7 output $right_monitor
#workspace $ws8 output $right_monitor
#
#exec --no-startup-id xrandr --output $left_monitor --mode '1920x1080' --left-of $right_monitor
##Example: exec --no-startup-id xrandr --output HDMI-1 --mode '1920x1080' --left-of DP-2
#==========================| MULTI-MONITOR END

#==========================> WORKSPACES
# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1" 
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

#==========================| WORKSPACES END

#==========================> RESIZING
# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
#==========================| RESIZING END

#==========================> BARS
#bar01
bar {
	id bar01
        #status_command i3status
        status_command py3status -c /etc/i3status.conf
        position bottom
        font pango:Source Code Variable 8
        tray_output none
        
        colors {
        #background #222D31
        background #0d0d0d
        statusline #F9FAF9
        separator  #454947

 #                     border  backgr. text
        focused_workspace  #ffffff #222D31 #EEE8D5
        active_workspace   #595B5B #353836 #FDF6E3
        inactive_workspace #595B5B #222D31 #EEE8D5
        binding_mode       #16a085 #2C2C2C #F9FAF9
        urgent_workspace   #16a085 #FDF6E3 #E5201D
    }
}

#bar02
bar {
	id bar02
        #status_command i3status
        status_command py3status -c /etc/i3status2.conf
        #tray_output none
        position top
        font pango:Source Code Variable 8
        workspace_buttons no
        
        colors {
        #background #222D31
        background #0d0d0d
        statusline #F9FAF9
        separator  #454947

 #                     border  backgr. text
        focused_workspace  #ffffff #222D31 #EEE8D5
        active_workspace   #595B5B #353836 #FDF6E3
        inactive_workspace #595B5B #222D31 #EEE8D5
        binding_mode       #16a085 #2C2C2C #F9FAF9
        urgent_workspace   #16a085 #FDF6E3 #E5201D
    }
}

#hiding bar with id bar02
#bindsym $mod+m bar mode toggle bar02

#==========================| BARS END

#==========================> GAPS
# Set inner/outer gaps
gaps inner 9
gaps outer -2

smart_gaps on
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
#==========================| GAPS END

#==========================> END OF FILE
